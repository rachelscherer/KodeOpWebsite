{"version":3,"sources":["assets/stockimage_client.jpg","assets/stockimage_startup.jpg","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","bg","variant","fixed","Brand","Nav","Link","App","className","Container","Row","Col","lg","xl","src","stock_client","alt","span","order","stock_startup","Card","text","Img","Body","Title","Text","offset","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.543898fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stockimage_client.8d1711a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stockimage_startup.eb53b926.jpg\";","import React from \"react\";\r\nimport  {Navbar , Nav } from 'react-bootstrap';\r\nimport \"./Header.css\";\r\n\r\nexport const Header = () => (\r\n    <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand>KodeOp</Navbar.Brand>\r\n        <Nav>\r\n            <Nav.Link>About Us</Nav.Link>\r\n            <Nav.Link>Our Mission</Nav.Link>\r\n            <Nav.Link>Our Staff</Nav.Link>\r\n            <Nav.Link>Deliverables</Nav.Link>\r\n        </Nav>\r\n        </Navbar>\r\n    </div>\r\n);","import React from \"react\";\r\nimport { Header } from  \"./Header\"\r\nimport { Container, Row, Col, Card} from \"react-bootstrap\"\r\nimport stock_client from \"./assets/stockimage_client.jpg\"\r\nimport stock_startup from \"./assets/stockimage_startup.jpg\"\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <h1 className=\"header\">KodeOp produces quality software for your company.</h1>\r\n      \r\n      <Container>\r\n        <Row className=\"rowstyle\">\r\n          <Col lg={12} xl={6}>\r\n            <img src={stock_client} alt=\"\" className=\"stockimage\" />\r\n          </Col>\r\n          <Col lg={12} xl={6}>\r\n          <h3 className=\"sectionheader\">About Us</h3>\r\n          <p className=\"sectiontext\">We are a worker co-op based in Pomona, CA. We are talented individual programmers who met each other while they were studying at Cal Poly Pomona. Through the hardship of enduring Rodriguez's class, we developed a strong bond in order to survive. Although the struggle was intense and harsh, our skills as programmers have flourished and is at its peak performance. Coming together as a group of individuals, we plan to use our talents and skills to make a impression on the coding world.</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowstyle\">\r\n          <Col lg={12} xl={{span: 6, order: 2}}>\r\n            <img src={stock_startup} alt=\"\" className=\"stockimage\" />\r\n          </Col>\r\n          <Col lg={12} xl={{span: 6, order: 1}}>\r\n          <h3 className=\"sectionheader\">Our Mission</h3>\r\n          <p className=\"sectiontext\">Billions upon billions of brilliant syntheses a still more glorious dawn awaits cosmic ocean network of wormholes citizens of distant epochs. Birth gathered by gravity brain is the seed of intelligence kindling the energy hidden in matter as a patch of light made in the interiors of collapsing stars. Globular star cluster inconspicuous motes of rock and gas invent the universe another world intelligent beings inconspicuous motes of rock and gas and billions upon billions upon billions upon billions upon billions upon billions upon billions.</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <h3 className=\"sectionheader\">Our Staff</h3>\r\n\r\n      <div className=\"staffholder\">\r\n      <Container>\r\n        <Row>\r\n          <Col lg={12} xl={4}>\r\n            <Card className=\"card\" bg=\"dark\" text=\"white\">\r\n              <Card.Img variant=\"top\" src=\"\" />\r\n                <Card.Body>\r\n                  <Card.Title>David Allison</Card.Title>\r\n                  <Card.Text>\r\n                    CEO\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          <Col lg={12} xl={4}>\r\n          <Card className=\"card\" bg=\"dark\" text=\"white\">\r\n            <Card.Img src=\"\" />\r\n              <Card.Body>\r\n                <Card.Title>Rachel Scherer</Card.Title>\r\n                <Card.Text>\r\n                  Insert role here\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={12} xl={4}>\r\n          <Card className=\"card\" bg=\"dark\" text=\"white\">\r\n              <Card.Img variant=\"top\" src=\"\" />\r\n              <Card.Body>\r\n                <Card.Title>Osiris</Card.Title>\r\n                <Card.Text>\r\n                  Insert role here\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={12} xl={{span: 4, offset: 2}}>\r\n            <Card className=\"card\" bg=\"dark\" text=\"white\">\r\n              <Card.Img variant=\"top\" src=\"\" />\r\n                <Card.Body>\r\n                  <Card.Title>Alex</Card.Title>\r\n                  <Card.Text>\r\n                    Insert role here\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={12} xl={4}>\r\n            <Card className=\"card\" bg=\"dark\" text=\"white\">\r\n              <Card.Img variant=\"top\" src=\"\" />\r\n                <Card.Body>\r\n                  <Card.Title>June</Card.Title>\r\n                  <Card.Text>\r\n                    Insert role here\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n      </div>\r\n      <h3 className=\"sectionheaderdeliverables\">Deliverables</h3>\r\n      <a href=\"https://drive.google.com/drive/folders/1hD_fnwefZ78lVn4yCefQ3Ma5MbtDpZvU\" target=\"_blank\">Meeting Minutes</a>\r\n      <div className=\"spacer\" />\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Required for react-bootstrap. Do not remove\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}